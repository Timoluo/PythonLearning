
### 面向对象编程

## OOP把对象作为程序的基本单元，一个对象包含了数据和操作数据的函数。


# 面向过程的程序设计把计算机程序视为一系列的命令集合，即一组函数的顺序执行。
# 为了简化程序设计，面向过程把函数继续切分为子函数，
# 即把大块函数通过切割成小块函数来降低系统的复杂度。

# 而面向对象的程序设计把计算机程序视为一组对象的集合，
# 而每个对象都可以接收其他对象发过来的消息，并处理这些消息，
# 计算机程序的执行就是一系列消息在各个对象之间传递。

# 在Python中，所有数据类型都可以视为对象，当然也可以自定义对象。
# 自定义的对象数据类型就是面向对象中的类（Class）的概念。

# 采用面向对象的程序设计思想，Student这种数据类型应该被视为一个对象，
# 拥有name和score这两个属性（Property）。如果要打印一个学生的成绩，
# 首先必须创建出学生对应的对象，然后，发print_score消息，让对象把自己的数据打印出来。

class Student(object):

    def __init__(self, name, score):
        self.name = name
        self.score = score

    def print_score(self):
        print('%s: %s' % (self.name, self.score))

## 面向对象的设计思想是抽象出Class，根据Class创建Instance。

## 面向对象的抽象程度又比函数要高，因为一个Class既包含数据，又包含操作数据的方法

## 数据封装、继承和多态是面向对象的三大特点


# class中的变量是静态变量。
# object中的变量是动态变量。
# 销毁object就会触发销毁器。
